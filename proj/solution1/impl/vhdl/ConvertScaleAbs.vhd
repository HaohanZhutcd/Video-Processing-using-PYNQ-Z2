-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ConvertScaleAbs is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of ConvertScaleAbs is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_438 : STD_LOGIC_VECTOR (10 downto 0) := "10000111000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_780 : STD_LOGIC_VECTOR (10 downto 0) := "11110000000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv11_433 : STD_LOGIC_VECTOR (10 downto 0) := "10000110011";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_9 : STD_LOGIC_VECTOR (11 downto 0) := "000000001001";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv54_3FFFFFFFFFFFFF : STD_LOGIC_VECTOR (53 downto 0) := "111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln2527_reg_784 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal icmp_ln2527_reg_784_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_0_reg_160 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln2526_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_180_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_779 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln2527_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln2527_reg_784_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2527_reg_784_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2527_reg_784_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2527_reg_784_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2527_reg_784_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2527_reg_784_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2527_reg_784_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2527_reg_784_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2527_reg_784_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_192_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_reg_793 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_171_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_assign_reg_803 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_4_fu_219_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_V_4_reg_808 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln833_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_814 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_814_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_814_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_820 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_820_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_820_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_239_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_826 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln581_reg_834 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_4_fu_257_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_4_reg_840 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_4_reg_840_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln582_fu_265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_846 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_reg_846_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_271_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln583_reg_853 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln583_reg_853_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln585_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_reg_859 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_reg_864 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_reg_864_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_870 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_reg_870_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_13_fu_367_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_13_reg_876 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_19_fu_379_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_19_reg_881 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln581_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_reg_887 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln403_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln403_reg_892 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_reg_897 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_4_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_4_reg_902 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_4_reg_902_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln621_reg_907_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln621_2_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln621_2_reg_912 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_2_reg_919 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_926 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln631_reg_931 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln635_fu_520_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln635_reg_937 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_2_fu_524_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range2_V_2_reg_942 : STD_LOGIC_VECTOR (53 downto 0);
    signal Range1_all_zeros_2_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_reg_948 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln642_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln642_reg_953 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_20_fu_607_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_20_reg_959 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln639_fu_677_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln639_reg_965 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln639_2_fu_692_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln639_2_reg_970 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal i_0_reg_149 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_171_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_202_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_fu_209_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln368_fu_205_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_229_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_251_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_56_fu_281_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_i_fu_302_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal sext_ln581_fu_313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_12_fu_309_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal zext_ln586_fu_316_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_320_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln586_fu_326_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln591_fu_342_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln591_fu_347_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln591_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_351_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_18_fu_330_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal qb_fu_359_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_fu_375_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_385_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln603_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_3_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos1_fu_442_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pos2_fu_451_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_59_fu_466_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln618_fu_447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln623_fu_480_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln623_fu_484_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal lD_fu_490_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln621_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln619_fu_456_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln639_2_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln642_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln639_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln581_fu_560_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln582_fu_568_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln403_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln403_2_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln403_fu_574_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln581_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_563_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln403_2_fu_590_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln631_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_625_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal and_ln631_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln631_fu_635_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln641_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln639_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln642_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln645_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln641_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln642_2_fu_685_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln621_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_704_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln658_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_2_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln428_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln571_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln571_2_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_720_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln571_fu_748_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_171_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sobel_accel_sitodtde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    sobel_accel_sitodtde_U85 : component sobel_accel_sitodtde
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_171_p0,
        ce => grp_fu_171_ce,
        dout => grp_fu_171_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln2526_fu_174_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln2526_fu_174_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                elsif (((icmp_ln2526_fu_174_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                i_0_reg_149 <= i_reg_779;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_149 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_0_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2527_fu_186_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                j_0_reg_160 <= j_fu_192_p2;
            elsif (((icmp_ln2526_fu_174_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_160 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2527_reg_784_pp0_iter7_reg = ap_const_lv1_0))) then
                F2_4_reg_840 <= F2_4_fu_257_p3;
                F2_reg_826 <= F2_fu_239_p2;
                icmp_ln571_reg_820 <= icmp_ln571_fu_233_p2;
                icmp_ln581_reg_834 <= icmp_ln581_fu_245_p2;
                icmp_ln582_reg_846 <= icmp_ln582_fu_265_p2;
                icmp_ln585_reg_859 <= icmp_ln585_fu_275_p2;
                icmp_ln603_reg_864 <= icmp_ln603_fu_291_p2;
                icmp_ln833_reg_814 <= icmp_ln833_fu_223_p2;
                tmp_V_4_reg_808 <= tmp_V_4_fu_219_p1;
                trunc_ln583_reg_853 <= trunc_ln583_fu_271_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                F2_4_reg_840_pp0_iter9_reg <= F2_4_reg_840;
                and_ln603_4_reg_902_pp0_iter10_reg <= and_ln603_4_reg_902;
                icmp_ln2527_reg_784_pp0_iter10_reg <= icmp_ln2527_reg_784_pp0_iter9_reg;
                icmp_ln2527_reg_784_pp0_iter2_reg <= icmp_ln2527_reg_784_pp0_iter1_reg;
                icmp_ln2527_reg_784_pp0_iter3_reg <= icmp_ln2527_reg_784_pp0_iter2_reg;
                icmp_ln2527_reg_784_pp0_iter4_reg <= icmp_ln2527_reg_784_pp0_iter3_reg;
                icmp_ln2527_reg_784_pp0_iter5_reg <= icmp_ln2527_reg_784_pp0_iter4_reg;
                icmp_ln2527_reg_784_pp0_iter6_reg <= icmp_ln2527_reg_784_pp0_iter5_reg;
                icmp_ln2527_reg_784_pp0_iter7_reg <= icmp_ln2527_reg_784_pp0_iter6_reg;
                icmp_ln2527_reg_784_pp0_iter8_reg <= icmp_ln2527_reg_784_pp0_iter7_reg;
                icmp_ln2527_reg_784_pp0_iter9_reg <= icmp_ln2527_reg_784_pp0_iter8_reg;
                icmp_ln571_reg_820_pp0_iter10_reg <= icmp_ln571_reg_820_pp0_iter9_reg;
                icmp_ln571_reg_820_pp0_iter9_reg <= icmp_ln571_reg_820;
                icmp_ln582_reg_846_pp0_iter9_reg <= icmp_ln582_reg_846;
                icmp_ln603_reg_864_pp0_iter9_reg <= icmp_ln603_reg_864;
                icmp_ln621_reg_907_pp0_iter10_reg <= icmp_ln621_reg_907;
                icmp_ln833_reg_814_pp0_iter10_reg <= icmp_ln833_reg_814_pp0_iter9_reg;
                icmp_ln833_reg_814_pp0_iter9_reg <= icmp_ln833_reg_814;
                icmp_ln837_reg_870_pp0_iter10_reg <= icmp_ln837_reg_870;
                trunc_ln583_reg_853_pp0_iter9_reg <= trunc_ln583_reg_853;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2527_reg_784_pp0_iter8_reg = ap_const_lv1_0))) then
                Range1_all_ones_2_reg_919 <= Range1_all_ones_2_fu_500_p2;
                Range1_all_zeros_2_reg_948 <= Range1_all_zeros_2_fu_536_p2;
                Range2_V_2_reg_942 <= Range2_V_2_fu_524_p2;
                and_ln403_reg_892 <= and_ln403_fu_409_p2;
                and_ln581_reg_887 <= and_ln581_fu_404_p2;
                and_ln603_4_reg_902 <= and_ln603_4_fu_436_p2;
                and_ln642_reg_953 <= and_ln642_fu_554_p2;
                icmp_ln621_reg_907 <= icmp_ln621_fu_460_p2;
                icmp_ln631_reg_931 <= icmp_ln631_fu_514_p2;
                icmp_ln837_reg_870 <= icmp_ln837_fu_297_p2;
                or_ln581_reg_897 <= or_ln581_fu_415_p2;
                p_Result_13_reg_876 <= p_Val2_18_fu_330_p3(7 downto 7);
                p_Val2_19_reg_881 <= p_Val2_19_fu_379_p2;
                tmp_60_reg_926 <= pos2_fu_451_p2(11 downto 11);
                xor_ln621_2_reg_912 <= xor_ln621_2_fu_474_p2;
                    zext_ln635_reg_937(31 downto 0) <= zext_ln635_fu_520_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_779 <= i_fu_180_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln2527_reg_784 <= icmp_ln2527_fu_186_p2;
                icmp_ln2527_reg_784_pp0_iter1_reg <= icmp_ln2527_reg_784;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2527_reg_784_pp0_iter9_reg = ap_const_lv1_0))) then
                p_Val2_20_reg_959 <= p_Val2_20_fu_607_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln603_4_reg_902) and (icmp_ln2527_reg_784_pp0_iter9_reg = ap_const_lv1_0))) then
                select_ln639_2_reg_970 <= select_ln639_2_fu_692_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2527_reg_784_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln603_4_reg_902))) then
                select_ln639_reg_965 <= select_ln639_fu_677_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2527_reg_784 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_793 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2527_reg_784_pp0_iter6_reg = ap_const_lv1_0))) then
                x_assign_reg_803 <= grp_fu_171_p1;
            end if;
        end if;
    end process;
    zext_ln635_reg_937(53 downto 32) <= "0000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter11, icmp_ln2526_fu_174_p2, ap_CS_fsm_state2, icmp_ln2527_fu_186_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln2526_fu_174_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln2527_fu_186_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((icmp_ln2527_fu_186_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    F2_4_fu_257_p3 <= 
        F2_fu_239_p2 when (icmp_ln581_fu_245_p2(0) = '1') else 
        sub_ln581_fu_251_p2;
    F2_fu_239_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_229_p1));
    Range1_all_ones_2_fu_500_p2 <= (icmp_ln621_fu_460_p2 and and_ln621_fu_494_p2);
    Range1_all_ones_fu_647_p2 <= (select_ln631_fu_635_p3 and Range1_all_ones_2_reg_919);
    Range1_all_zeros_2_fu_536_p2 <= "1" when (p_Result_12_fu_309_p1 = ap_const_lv54_0) else "0";
    Range1_all_zeros_fu_657_p2 <= (ap_const_lv1_1 xor Range1_all_ones_2_reg_919);
    Range2_V_2_fu_524_p2 <= std_logic_vector(shift_right(unsigned(p_Result_12_fu_309_p1),to_integer(unsigned('0' & zext_ln635_fu_520_p1(31-1 downto 0)))));
    Range2_all_ones_fu_630_p2 <= "1" when (Range2_V_2_reg_942 = r_V_fu_625_p2) else "0";
    add_ln591_fu_342_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(F2_reg_826));
    and_ln403_2_fu_585_p2 <= (xor_ln403_fu_580_p2 and and_ln581_reg_887);
    and_ln403_fu_409_p2 <= (p_Result_13_fu_367_p3 and and_ln581_fu_404_p2);
    and_ln428_2_fu_727_p2 <= (icmp_ln837_reg_870_pp0_iter10_reg and icmp_ln833_reg_814_pp0_iter10_reg);
    and_ln428_fu_700_p2 <= (icmp_ln837_reg_870_pp0_iter10_reg and icmp_ln833_reg_814_pp0_iter10_reg);
    and_ln571_fu_737_p2 <= (xor_ln428_fu_731_p2 and icmp_ln571_reg_820_pp0_iter10_reg);
    and_ln581_fu_404_p2 <= (xor_ln582_fu_399_p2 and icmp_ln581_reg_834);
    and_ln603_3_fu_430_p2 <= (xor_ln416_fu_393_p2 and or_ln603_fu_424_p2);
    and_ln603_4_fu_436_p2 <= (and_ln603_3_fu_430_p2 and and_ln403_fu_409_p2);
    and_ln603_fu_602_p2 <= (xor_ln581_fu_597_p2 and icmp_ln603_reg_864_pp0_iter9_reg);
    and_ln621_fu_494_p2 <= (xor_ln621_2_fu_474_p2 and lD_fu_490_p1);
    and_ln631_fu_620_p2 <= (xor_ln631_fu_615_p2 and icmp_ln631_reg_931);
    and_ln639_fu_643_p2 <= (xor_ln621_2_reg_912 and icmp_ln631_reg_931);
    and_ln641_fu_662_p2 <= (icmp_ln641_fu_652_p2 and Range1_all_zeros_fu_657_p2);
    and_ln642_fu_554_p2 <= (or_ln639_fu_548_p2 and icmp_ln642_fu_530_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln2527_reg_784, ap_enable_reg_pp0_iter11, icmp_ln2527_reg_784_pp0_iter10_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln2527_reg_784_pp0_iter10_reg = ap_const_lv1_0) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((icmp_ln2527_reg_784 = ap_const_lv1_0) and (p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln2527_reg_784, ap_enable_reg_pp0_iter11, icmp_ln2527_reg_784_pp0_iter10_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln2527_reg_784_pp0_iter10_reg = ap_const_lv1_0) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((icmp_ln2527_reg_784 = ap_const_lv1_0) and (p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln2527_reg_784, ap_enable_reg_pp0_iter11, icmp_ln2527_reg_784_pp0_iter10_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln2527_reg_784_pp0_iter10_reg = ap_const_lv1_0) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1)) or ((icmp_ln2527_reg_784 = ap_const_lv1_0) and (p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage0_iter11_assign_proc : process(p_dst_data_stream_V_full_n, icmp_ln2527_reg_784_pp0_iter10_reg)
    begin
                ap_block_state14_pp0_stage0_iter11 <= ((icmp_ln2527_reg_784_pp0_iter10_reg = ap_const_lv1_0) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, icmp_ln2527_reg_784)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((icmp_ln2527_reg_784 = ap_const_lv1_0) and (p_src_data_stream_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln2527_fu_186_p2)
    begin
        if ((icmp_ln2527_fu_186_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln2526_fu_174_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln2526_fu_174_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln2526_fu_174_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln2526_fu_174_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_fu_320_p2 <= std_logic_vector(shift_right(signed(p_Result_12_fu_309_p1),to_integer(unsigned('0' & zext_ln586_fu_316_p1(31-1 downto 0)))));
    ashr_ln623_fu_484_p2 <= std_logic_vector(shift_right(signed(p_Result_12_fu_309_p1),to_integer(unsigned('0' & zext_ln623_fu_480_p1(31-1 downto 0)))));
    deleted_zeros_fu_704_p3 <= 
        select_ln639_reg_965 when (and_ln603_4_reg_902_pp0_iter10_reg(0) = '1') else 
        select_ln639_2_reg_970;

    grp_fu_171_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_171_ce <= ap_const_logic_1;
        else 
            grp_fu_171_ce <= ap_const_logic_0;
        end if; 
    end process;

        grp_fu_171_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_793),32));

    i_fu_180_p2 <= std_logic_vector(unsigned(i_0_reg_149) + unsigned(ap_const_lv11_1));
    icmp_ln2526_fu_174_p2 <= "1" when (i_0_reg_149 = ap_const_lv11_438) else "0";
    icmp_ln2527_fu_186_p2 <= "1" when (j_0_reg_160 = ap_const_lv11_780) else "0";
    icmp_ln571_fu_233_p2 <= "1" when (trunc_ln368_fu_205_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_245_p2 <= "1" when (signed(F2_fu_239_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln582_fu_265_p2 <= "1" when (tmp_V_fu_209_p4 = ap_const_lv11_433) else "0";
    icmp_ln585_fu_275_p2 <= "1" when (unsigned(F2_4_fu_257_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln591_fu_337_p2 <= "1" when (signed(F2_reg_826) > signed(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_291_p2 <= "1" when (tmp_56_fu_281_p4 = ap_const_lv9_0) else "0";
    icmp_ln621_fu_460_p2 <= "1" when (signed(pos1_fu_442_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln631_fu_514_p2 <= "1" when (signed(pos2_fu_451_p2) < signed(ap_const_lv12_36)) else "0";
    icmp_ln641_fu_652_p2 <= "1" when (Range2_V_2_reg_942 = ap_const_lv54_0) else "0";
    icmp_ln642_fu_530_p2 <= "1" when (pos2_fu_451_p2 = ap_const_lv12_36) else "0";
    icmp_ln833_fu_223_p2 <= "1" when (tmp_V_fu_209_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln837_fu_297_p2 <= "0" when (tmp_V_4_reg_808 = ap_const_lv52_0) else "1";
    j_fu_192_p2 <= std_logic_vector(unsigned(j_0_reg_160) + unsigned(ap_const_lv11_1));
    lD_fu_490_p1 <= ashr_ln623_fu_484_p2(1 - 1 downto 0);
    or_ln571_2_fu_755_p2 <= (icmp_ln571_reg_820_pp0_iter10_reg or and_ln428_fu_700_p2);
    or_ln571_fu_742_p2 <= (and_ln571_fu_737_p2 or and_ln428_fu_700_p2);
    or_ln581_fu_415_p2 <= (icmp_ln582_reg_846 or icmp_ln581_reg_834);
    or_ln603_fu_424_p2 <= (xor_ln603_fu_419_p2 or or_ln581_fu_415_p2);
    or_ln639_fu_548_p2 <= (xor_ln639_2_fu_542_p2 or tmp_59_fu_466_p3);
    or_ln645_fu_668_p2 <= (xor_ln621_2_reg_912 or Range1_all_zeros_2_reg_948);
    or_ln658_fu_714_p2 <= (xor_ln621_fu_709_p2 or deleted_zeros_fu_704_p3);
    p_Result_12_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_i_fu_302_p3),54));
    p_Result_13_fu_367_p3 <= p_Val2_18_fu_330_p3(7 downto 7);
    p_Result_s_fu_351_p3 <= p_Result_12_fu_309_p1(to_integer(unsigned(zext_ln591_fu_347_p1)) downto to_integer(unsigned(zext_ln591_fu_347_p1))) when (to_integer(unsigned(zext_ln591_fu_347_p1))>= 0 and to_integer(unsigned(zext_ln591_fu_347_p1))<=53) else "-";
    p_Val2_18_fu_330_p3 <= 
        trunc_ln586_fu_326_p1 when (icmp_ln585_reg_859(0) = '1') else 
        ap_const_lv8_0;
    p_Val2_19_fu_379_p2 <= std_logic_vector(unsigned(p_Val2_18_fu_330_p3) + unsigned(zext_ln415_fu_375_p1));
    p_Val2_20_fu_607_p3 <= 
        shl_ln604_fu_563_p2 when (and_ln603_fu_602_p2(0) = '1') else 
        select_ln403_2_fu_590_p3;
    p_Val2_s_fu_202_p1 <= x_assign_reg_803;

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter11, icmp_ln2527_reg_784_pp0_iter10_reg)
    begin
        if (((icmp_ln2527_reg_784_pp0_iter10_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        select_ln340_fu_720_p3 when (xor_ln571_fu_760_p2(0) = '1') else 
        select_ln571_fu_748_p3;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter11, icmp_ln2527_reg_784_pp0_iter10_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2527_reg_784_pp0_iter10_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln2527_reg_784)
    begin
        if (((icmp_ln2527_reg_784 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln2527_reg_784, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln2527_reg_784 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    pos1_fu_442_p2 <= std_logic_vector(unsigned(ap_const_lv12_8) + unsigned(F2_reg_826));
    pos2_fu_451_p2 <= std_logic_vector(unsigned(ap_const_lv12_9) + unsigned(F2_reg_826));
    qb_fu_359_p3 <= 
        ap_const_lv1_0 when (icmp_ln591_fu_337_p2(0) = '1') else 
        p_Result_s_fu_351_p3;
    r_V_fu_625_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv54_3FFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln635_reg_937(31-1 downto 0)))));
    select_ln340_fu_720_p3 <= 
        p_Val2_20_reg_959 when (or_ln658_fu_714_p2(0) = '1') else 
        ap_const_lv8_FF;
    select_ln403_2_fu_590_p3 <= 
        p_Val2_19_reg_881 when (and_ln403_2_fu_585_p2(0) = '1') else 
        select_ln403_fu_574_p3;
    select_ln403_fu_574_p3 <= 
        p_Val2_19_reg_881 when (and_ln403_reg_892(0) = '1') else 
        select_ln582_fu_568_p3;
    select_ln571_fu_748_p3 <= 
        ap_const_lv8_0 when (or_ln571_fu_742_p2(0) = '1') else 
        p_Val2_20_reg_959;
    select_ln582_fu_568_p3 <= 
        trunc_ln583_reg_853_pp0_iter9_reg when (icmp_ln582_reg_846_pp0_iter9_reg(0) = '1') else 
        ap_const_lv8_0;
    select_ln631_fu_635_p3 <= 
        Range2_all_ones_fu_630_p2 when (and_ln631_fu_620_p2(0) = '1') else 
        xor_ln631_fu_615_p2;
    select_ln639_2_fu_692_p3 <= 
        and_ln641_fu_662_p2 when (and_ln639_fu_643_p2(0) = '1') else 
        select_ln642_2_fu_685_p3;
    select_ln639_fu_677_p3 <= 
        Range1_all_ones_fu_647_p2 when (and_ln639_fu_643_p2(0) = '1') else 
        select_ln642_fu_672_p3;
    select_ln642_2_fu_685_p3 <= 
        Range1_all_zeros_fu_657_p2 when (and_ln642_reg_953(0) = '1') else 
        or_ln645_fu_668_p2;
    select_ln642_fu_672_p3 <= 
        Range1_all_ones_2_reg_919 when (and_ln642_reg_953(0) = '1') else 
        xor_ln621_2_reg_912;
        sext_ln581_fu_313_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(F2_4_reg_840),32));

        sext_ln618_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos1_fu_442_p2),32));

        sext_ln619_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(pos2_fu_451_p2),32));

    shl_ln604_fu_563_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_reg_853_pp0_iter9_reg),to_integer(unsigned('0' & trunc_ln581_fu_560_p1(8-1 downto 0)))));
    sub_ln581_fu_251_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(F2_fu_239_p2));
    tmp_1_i_fu_302_p3 <= (ap_const_lv1_1 & tmp_V_4_reg_808);
    tmp_56_fu_281_p4 <= F2_4_fu_257_p3(11 downto 3);
    tmp_58_fu_385_p3 <= p_Val2_19_fu_379_p2(7 downto 7);
    tmp_59_fu_466_p3 <= pos1_fu_442_p2(11 downto 11);
    tmp_V_4_fu_219_p1 <= p_Val2_s_fu_202_p1(52 - 1 downto 0);
    tmp_V_fu_209_p4 <= p_Val2_s_fu_202_p1(62 downto 52);
    trunc_ln368_fu_205_p1 <= p_Val2_s_fu_202_p1(63 - 1 downto 0);
    trunc_ln581_fu_560_p1 <= F2_4_reg_840_pp0_iter9_reg(8 - 1 downto 0);
    trunc_ln583_fu_271_p1 <= p_Val2_s_fu_202_p1(8 - 1 downto 0);
    trunc_ln586_fu_326_p1 <= ashr_ln586_fu_320_p2(8 - 1 downto 0);
    xor_ln403_fu_580_p2 <= (p_Result_13_reg_876 xor ap_const_lv1_1);
    xor_ln416_fu_393_p2 <= (tmp_58_fu_385_p3 xor ap_const_lv1_1);
    xor_ln428_fu_731_p2 <= (ap_const_lv1_1 xor and_ln428_2_fu_727_p2);
    xor_ln571_fu_760_p2 <= (or_ln571_2_fu_755_p2 xor ap_const_lv1_1);
    xor_ln581_fu_597_p2 <= (or_ln581_reg_897 xor ap_const_lv1_1);
    xor_ln582_fu_399_p2 <= (icmp_ln582_reg_846 xor ap_const_lv1_1);
    xor_ln603_fu_419_p2 <= (icmp_ln603_reg_864 xor ap_const_lv1_1);
    xor_ln621_2_fu_474_p2 <= (tmp_59_fu_466_p3 xor ap_const_lv1_1);
    xor_ln621_fu_709_p2 <= (icmp_ln621_reg_907_pp0_iter10_reg xor ap_const_lv1_1);
    xor_ln631_fu_615_p2 <= (tmp_60_reg_926 xor ap_const_lv1_1);
    xor_ln639_2_fu_542_p2 <= (icmp_ln631_fu_514_p2 xor ap_const_lv1_1);
    zext_ln415_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(qb_fu_359_p3),8));
    zext_ln461_fu_229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_209_p4),12));
    zext_ln586_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_313_p1),54));
    zext_ln591_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln591_fu_342_p2),32));
    zext_ln623_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln618_fu_447_p1),54));
    zext_ln635_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln619_fu_456_p1),54));
end behav;
